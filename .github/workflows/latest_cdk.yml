# Workflow will build a new PyCDK image based on the
# latest version from AWS.

name: Build the latest CDK

# Controls when the workflow will run
on:
  schedule:
    - cron: '00 15 * * *'
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Latest Github Release Tag
        uses: rez0n/actions-github-release@v2.0
        id: cdk_release
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "aws/aws-cdk-cli"
          type: "latest"

      # Remove the v from version tag
      - name: CDK Version From Tag
        id: get-ver
        run: |
          ver=$(echo ${{steps.cdk_release.outputs.release}} | cut -dv -f2)
          echo "::set-output name=cdknpmver::$ver"
      # Debug output the CDK version
      - name: CDK NPM Version From Tag
        env: 
          VER: ${{ steps.get-ver.outputs.cdknpmver }}
        run: echo Latest NPM CDK Version $VER
        
      - name: Latest Github Release Tag
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        id: cdk_release2
        with:
          path: package/aws-cdk

      # Remove the v from version tag
      - name: CDK Version From Tag
        id: get-ver2
        run: |
          ver=$(echo ${{steps.cdk_release2.outputs.current-version}} | cut -dv -f2)
          echo "::set-output name=cdkver::$ver"
      # Debug output the CDK version
      - name: CDK CLI Version From Tag
        env: 
          VER: ${{ steps.get-ver2.outputs.cdkver }}
        run: echo Latest CDK Version $VER

      #Start Docker Build
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{steps.get-ver2.outputs.cdkver}}
            type=raw,value=${{steps.cdk_release2.outputs.release}}
            type=raw,value=latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "CDK_VERSION=${{ steps.get-ver2.outputs.cdkver }}"
            "CDK_NPM_VERSION=${{ steps.get-ver.outputs.cdknpmver }}"
